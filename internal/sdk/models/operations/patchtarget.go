// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-target/internal/sdk/models/shared"
	"net/http"
)

type PatchTargetRequest struct {
	// Target to patch
	TargetPatch shared.TargetPatch `request:"mediaType=application/json"`
	// The target id
	TargetID string `pathParam:"style=simple,explode=false,name=targetId"`
}

func (p *PatchTargetRequest) GetTargetPatch() shared.TargetPatch {
	if p == nil {
		return shared.TargetPatch{}
	}
	return p.TargetPatch
}

func (p *PatchTargetRequest) GetTargetID() string {
	if p == nil {
		return ""
	}
	return p.TargetID
}

type PatchTargetResponse struct {
	// Any error based on client data errors
	ClientError *shared.ClientError
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Target entity response
	Target *shared.Target
}

func (p *PatchTargetResponse) GetClientError() *shared.ClientError {
	if p == nil {
		return nil
	}
	return p.ClientError
}

func (p *PatchTargetResponse) GetContentType() string {
	if p == nil {
		return ""
	}
	return p.ContentType
}

func (p *PatchTargetResponse) GetStatusCode() int {
	if p == nil {
		return 0
	}
	return p.StatusCode
}

func (p *PatchTargetResponse) GetRawResponse() *http.Response {
	if p == nil {
		return nil
	}
	return p.RawResponse
}

func (p *PatchTargetResponse) GetTarget() *shared.Target {
	if p == nil {
		return nil
	}
	return p.Target
}
