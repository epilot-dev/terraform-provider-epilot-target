// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-target/internal/sdk/models/shared"
	"net/http"
)

type UpdateTargetRequest struct {
	// Target to update
	TargetCreate shared.TargetCreate `request:"mediaType=application/json"`
	// The target id
	TargetID string `pathParam:"style=simple,explode=false,name=targetId"`
}

func (u *UpdateTargetRequest) GetTargetCreate() shared.TargetCreate {
	if u == nil {
		return shared.TargetCreate{}
	}
	return u.TargetCreate
}

func (u *UpdateTargetRequest) GetTargetID() string {
	if u == nil {
		return ""
	}
	return u.TargetID
}

type UpdateTargetResponse struct {
	// Any error based on client data errors
	ClientError *shared.ClientError
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Target entity response
	Target *shared.Target
}

func (u *UpdateTargetResponse) GetClientError() *shared.ClientError {
	if u == nil {
		return nil
	}
	return u.ClientError
}

func (u *UpdateTargetResponse) GetContentType() string {
	if u == nil {
		return ""
	}
	return u.ContentType
}

func (u *UpdateTargetResponse) GetStatusCode() int {
	if u == nil {
		return 0
	}
	return u.StatusCode
}

func (u *UpdateTargetResponse) GetRawResponse() *http.Response {
	if u == nil {
		return nil
	}
	return u.RawResponse
}

func (u *UpdateTargetResponse) GetTarget() *shared.Target {
	if u == nil {
		return nil
	}
	return u.Target
}
