// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-target/internal/sdk/internal/utils"
	"github.com/epilot-dev/terraform-provider-epilot-target/internal/sdk/models/shared"
	"net/http"
)

type GetTargetRequest struct {
	// Hydrates entities in relations when passed true
	Hydrate *bool `default:"false" queryParam:"style=form,explode=true,name=hydrate"`
	// When passed true, the response will contain only fields that match the schema, with non-matching fields included in `__additional`
	Strict *bool `default:"false" queryParam:"style=form,explode=true,name=strict"`
	// The target id
	TargetID string `pathParam:"style=simple,explode=false,name=targetId"`
}

func (g GetTargetRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetTargetRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"targetId"}); err != nil {
		return err
	}
	return nil
}

func (g *GetTargetRequest) GetHydrate() *bool {
	if g == nil {
		return nil
	}
	return g.Hydrate
}

func (g *GetTargetRequest) GetStrict() *bool {
	if g == nil {
		return nil
	}
	return g.Strict
}

func (g *GetTargetRequest) GetTargetID() string {
	if g == nil {
		return ""
	}
	return g.TargetID
}

type GetTargetResponse struct {
	// Any error based on client data errors
	ClientError *shared.ClientError
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Target entity response
	Target *shared.Target
}

func (g *GetTargetResponse) GetClientError() *shared.ClientError {
	if g == nil {
		return nil
	}
	return g.ClientError
}

func (g *GetTargetResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetTargetResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetTargetResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetTargetResponse) GetTarget() *shared.Target {
	if g == nil {
		return nil
	}
	return g.Target
}
